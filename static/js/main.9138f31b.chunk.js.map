{"version":3,"sources":["components/Header.js","components/main/Search.js","components/service.js","components/main/Organisation.js","components/main/User.js","components/utils.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Search","props","className","type","onChange","handleSearch","autoFocus","API_URL","OrgsService","getAll","_getAll","Object","asyncToGenerator","regenerator_default","mark","_callee","result","response","wrap","_context","prev","next","fetch","sent","json","t0","abrupt","stop","apply","this","arguments","getById","login","then","getAllDetails","_getAllDetails","_callee2","orgs","promises","_context2","map","org","Promise","all","_x","getMembers","_getMembers","_callee3","_context3","console","log","_x2","getUser","getUsersDetails","_getUsersDetails","_callee4","members","_context4","member","_x3","Organisation","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelect","event","selectedLogin","searchedOrgs","filter","target","textContent","name","setState","selectedOrg","data","renderMembers","state","i","renderSearchedOrgs","key","onClick","description","React","Component","User","utils","debounce","f","delay","timer","_len","length","args","Array","_key","clearTimeout","setTimeout","concat","Main","value","filtredOrgs","toLowerCase","includes","catch","error","_this2","debouncedEvent","persist","_this3","main_Search","debounceEvent","main_Organisation","main_User","App","components_Header","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9138f31b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n\treturn(\r\n\t\t<header>\r\n\t\t  <h1> Organisations </h1>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nfunction Search(props) {\r\n\treturn(\r\n\t\t<div className=\"search\"> \r\n\t\t  <h1> Search </h1>\r\n      <input type=\"text\"\r\n             onChange={props.handleSearch}\r\n             autoFocus>\r\n      </input>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Search;\r\n","const API_URL = 'https://api.github.com';\r\n\r\nconst OrgsService = {\r\n  async getAll() {\r\n    let result;\r\n    try {\r\n      const response = await fetch(API_URL + '/organizations?page=1&per_page=100');\r\n      result = await response.json();\r\n    } catch (error) {\r\n      result = [];\r\n    }\r\n    return result;\r\n  },\r\n  getById(login) {\r\n    return fetch(API_URL + '/orgs/' + login)\r\n      .then((response) => response.json())\r\n  },\r\n  async getAllDetails(orgs){\r\n    const promises = await orgs.map((org) => OrgsService.getById(org.login));\r\n    return await Promise.all(promises)\r\n  },\r\n  async getMembers(login) {\r\n    let result;\r\n    // return fetch(API_URL + '/orgs/' + login + \"/members\")\r\n    //   .then((response) => response.json())\r\n      const response = await fetch(API_URL + '/orgs/' + login + \"/members\");\r\n      console.log(API_URL + '/orgs/' + login + \"/members\")\r\n      return result = await response.json()\r\n  },\r\n  getUser(login){\r\n    return fetch(API_URL + '/users/' + login)\r\n      .then((response) => response.json())\r\n  },\r\n  async getUsersDetails(members){\r\n    const promises = await members.map((member) => OrgsService.getUser(member.login));\r\n    return await Promise.all(promises)\r\n  }\r\n}\r\nexport default OrgsService;\r\n","import React from 'react';\nimport OrgsService from './../service'\n\nclass Organisation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOrg: false,\n      members: []\n    }\n  }\n\n  handleSelect = (event) => {\n    const selected = this.props.searchedOrgs.filter(org=>{\n      return event.target.textContent === (org.name || org.login)\n    })\n    const selectedLogin = selected[0].login;\n    this.setState({\n      selectedOrg: selectedLogin\n    })\n    \n    OrgsService.getMembers(selectedLogin)\n    .then(data=>{\n        this.setState({\n          members: data\n        })\n        console.log(data)\n      })\n    console.log(selectedLogin)\n  }\n\n  renderMembers = () => {\n  //   OrgsService.getMembers()\n  console.log(this.state.members)\n  return this.state.members.map((member, i)=>{\n      return <p>{member.login}</p>\n    })\n  }\n\n  renderSearchedOrgs = () => {\n    return this.props.searchedOrgs.map((org, i ) => {\n      return (\n        <div className=\"organisation\"\n             key={i} >\n          <h4 className=\"organisation__name\"\n              onClick={this.handleSelect}>\n            {org.name || org.login}\n          </h4>\n          {(this.state.selectedOrg &&\n           this.state.selectedOrg === org.login)?(\n            <div className=\"org__info\">\n              <p className=\"org_description\">{org.description}</p>\n              <div>{this.renderMembers()}</div>\n            </div>)\n          :(\"\")}\n        </div>\n    )});\n  }\n\n\trender() {\n    return(\n  \t\t<div className=\"organisations\">\n  \t\t  <h1> Organisations </h1>\n        {this.renderSearchedOrgs()}\n  \t\t</div>\n\t)}\n}\n\nexport default Organisation;\n","import React from 'react';\r\n\r\nfunction User() {\r\n\treturn(\r\n\t\t<div>\r\n      <h1> User </h1>\r\n    </div>\r\n\t)\r\n}\r\n\r\nexport default User;\r\n","const utils = {\r\n  debounce\r\n};\r\n\r\nexport default utils;\r\n\r\nfunction debounce(f, delay) {\r\n  let timer = null;\r\n  return function(...args) {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      f.call(this, ...args);\r\n    }, delay);\r\n  };\r\n}","import React from 'react';\r\nimport Search from './main/Search'\r\nimport Organisation from './main/Organisation'\r\nimport User from './main/User'\r\nimport OrgsService from './service'\r\nimport utils from './utils'\r\n\r\nclass Main extends React.Component {\r\n    constructor() {\r\n    super();\r\n    this.state={\r\n      orgs: [],\r\n      searchedOrgs: []\r\n    }\r\n\t}\r\n\r\n  debounceEvent(...args) {\r\n    this.debouncedEvent = utils.debounce(...args);\r\n    return event => {\r\n      event.persist();\r\n      return this.debouncedEvent(event);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    OrgsService.getAll()\r\n    .then(data=>{this.setState({\r\n        orgs: data\r\n      })})\r\n  }\r\n\r\n  handleSearch = (event) =>{\r\n    const target =  event.target.value;\r\n    const filtredOrgs = this.state.orgs.filter((org) => {\r\n      return org.login.toLowerCase().includes(target.toLowerCase());\r\n    });\r\n    OrgsService.getAllDetails(filtredOrgs)\r\n      .then(data=>{this.setState({\r\n        searchedOrgs: data\r\n        })\r\n      })\r\n      .catch((error) => {return []});\r\n  };\r\n\r\n  render(){\r\n     \r\n\t  return(\r\n\t\t  <main className=\"main\">\r\n        <Search handleSearch={this.debounceEvent(this.handleSearch, 500)}/>\r\n        <div> </div>\r\n        <Organisation searchedOrgs={this.state.searchedOrgs}/>\r\n        <User />\r\n\t\t  </main>\r\n\t)}\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header.js'\r\nimport Main from './components/Main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}