{"version":3,"sources":["components/Header.js","components/main/Search.js","components/service.js","components/main/OrganisationList.js","components/utils.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Search","props","className","type","onChange","handleSearch","autoFocus","API_URL","OrgsService","getMembers","_getMembers","Object","asyncToGenerator","regenerator_default","mark","_callee","login","response","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","stop","_x","apply","this","arguments","getFollow","_getFollow","_callee2","follow","_context2","_x2","_x3","searchOrg","_searchOrg","_callee3","result","_context3","items","_x4","OrganisationList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelect","event","selectedLogin","searchedOrgs","filter","org","target","textContent","state","selectedOrg","setState","members","then","data","length","catch","error","handleSelectUser","member","selectedUser","followers","follows","renderFollow","Array","isArray","searching","map","person","i","key","id","notFound","renderMembers","alt","src","avatar_url","onClick","renderSearchedOrgs","message","description","React","Component","utils","debounce","f","delay","timer","_len","args","_key","clearTimeout","setTimeout","concat","Main","value","toLowerCase","_this2","debouncedEvent","persist","console","log","Date","main_Search","debounceEvent","main_OrganisationList","App","components_Header","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eeecd62c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n\treturn(\r\n\t\t<header>\r\n\t\t  <h1> Organisations </h1>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Search(props) {\r\n\treturn(\r\n\t\t<div className=\"search\"> \r\n\t\t  <h1> Search </h1>\r\n      <input type=\"text\"\r\n             onChange={props.handleSearch}\r\n             autoFocus>\r\n      </input>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Search;\r\n","const API_URL = 'https://api.github.com';\r\n\r\nconst OrgsService = {\r\n  // async getAll() {\r\n  //   let result;\r\n  //   try {\r\n  //     const response = await fetch(API_URL + '/organizations?page=1&per_page=100');\r\n  //     result = await response.json();\r\n  //   } catch (error) {\r\n  //     result = [];\r\n  //   }\r\n  //   return result;\r\n  // },\r\n  // async getById(login) {\r\n  //   let result;\r\n  //   try {\r\n  //     const response = await fetch(API_URL + '/orgs/' + login);\r\n  //     result = await response.json();\r\n  //   } catch (error) {\r\n  //     result = error;\r\n  //   }\r\n  //   return result;\r\n  // },\r\n  // async getAllDetails(orgs){\r\n  //   const promises = await orgs.map((org) => OrgsService.getById(org.login));\r\n  //   return await Promise.all(promises)\r\n  // },\r\n  async getMembers(login) {\r\n    try {\r\n      const response = await fetch(API_URL + '/orgs/' + login + \"/members\");\r\n      return await response.json()\r\n    } catch (error) {\r\n      return error;\r\n    } \r\n  },\r\n  // getUser(login){\r\n  //   return fetch(API_URL + '/users/' + login)\r\n  //     .then((response) => response.json())\r\n  // },\r\n  // async getUsersDetails(login){\r\n  //   const members = await OrgsService.getMembers(login);\r\n  //   const promises = await members.map((member) => OrgsService.getUser(member.login));\r\n  //   return await Promise.all(promises)\r\n  // },\r\n  async getFollow(login,follow) {\r\n    const response = await fetch(API_URL + '/users/' + login + \"/\" + follow);\r\n    return  await response.json()\r\n  },\r\n  // async getFollowDetails(login,follow){\r\n  //   const follows = await OrgsService.getFollow(login,follow);\r\n  //   const promises = await follows.map((person) => OrgsService.getUser(person.login));\r\n  //   return await Promise.all(promises)\r\n  // },\r\n  async searchOrg(login) {\r\n    let result;\r\n    try {\r\n      const response = await fetch(API_URL + '/search/users?q=' + login + '%20type:org');\r\n      result = await response.json();\r\n    } catch (error) {\r\n      result = [];\r\n    }\r\n    return result.items;\r\n  },\r\n  // async getOrgDetails(login){\r\n  //   const orgs = await OrgsService.searchOrg(login)\r\n  //   const promises = await orgs.map((org) => OrgsService.getById(org.login));\r\n  //   return await Promise.all(promises)\r\n  // }\r\n}\r\nexport default OrgsService;\r\n","import React from 'react';\nimport OrgsService from './../service'\n\nclass OrganisationList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOrg: false,\n      members: [],\n      selectedUser: false,\n      followers: [],\n      follows: []\n    }\n    this.notFound = \"Sorry, i can't find\";\n    this.searching = \"Sorry, i'm searching\";\n  }\n\n  handleSelect = (event) => {\n    const selected = this.props.searchedOrgs.filter(org=>{\n      return event.target.textContent === org.login\n    })\n    const selectedLogin = selected[0].login;\n    if(this.state.selectedOrg === selectedLogin){\n      this.setState({\n        selectedOrg: false,\n        members: [],\n      })\n      return;\n    }\n    this.setState({\n      selectedOrg: selectedLogin,\n      members: []\n    })\n    \n    OrgsService.getMembers(selectedLogin)\n      .then(data => {\n        if(data.length === 0) {\n          data = \"\"\n        };\n        this.setState({ members: data });\n      })\n      .catch((error) => [\"it's error\"]);\n  }\n\n  handleSelectUser = (event) => {\n    const selected = this.state.members.filter(member => {\n      return event.target.textContent ===  member.login\n    })\n    const selectedLogin = selected[0].login;\n    if(this.state.selectedUser === selectedLogin) {\n      this.setState({\n        selectedUser: false,\n        followers: [],\n        follows: []\n      })\n      return;\n    }\n    this.setState({\n        selectedUser: selectedLogin,\n        followers: [],\n        follows: []\n      })\n\n    OrgsService.getFollow(selectedLogin,\"followers\")\n      .then(data => {\n        if(data.length === 0) {\n          data = \"\"\n        };\n        this.setState({ followers: data })\n      })\n      .catch((error) => [\"it's error\"]);\n\n    OrgsService.getFollow(selectedLogin,\"following\")\n      .then(data => {\n        if(data.length === 0) {\n          data = \"\"\n        };\n        this.setState({ follows: data })\n      })\n      .catch((error) => [\"it's error\"]);\n  }\n\n  renderFollow = (follow) => {\n    if(!Array.isArray(follow)) {\n      return <p>{this.notFound}</p>\n    }\n    if(follow.length === 0) {\n      return <p>{this.searching}</p>  \n    }\n    return follow.map((person, i) => {\n      return <p key={person.id + i}>{person.login}</p> \n    })\n  }\n\n  renderMembers = () => {\n    const {members} = this.state;\n    if(!Array.isArray(members)) {\n      return <p>{this.notFound}</p>\n    }\n    if(members.length === 0) {\n     return <p>{this.searching}</p> \n    }\n    return members.map((member, i) => {\n      return (\n        <div  className=\"member\"\n              key={member.id + i}>\n          <div className=\"member_main\">\n            <img alt=\"member avatar\" \n                 className=\"member_avatar\"\n                 src={member.avatar_url}></img>\n            <p className=\"member_name\"\n              onClick={this.handleSelectUser}>\n              {member.login}\n            </p>\n          </div>\n          {(this.state.selectedUser &&\n          this.state.selectedUser === member.login)?(\n            <div className=\"member_info\">\n              <div className=\"member_followers\"> \n                <h4> followers:\n                </h4> \n                {this.renderFollow(this.state.followers)}\n              </div>\n              <div> \n                <h4> follows:\n                </h4> \n                {this.renderFollow(this.state.follows)}\n              </div>\n            </div>\n          ):(\" \")}\n      </div>\n    )})\n  }\n\n  renderSearchedOrgs = () => {\n    const {searchedOrgs} = this.props;\n    if(!searchedOrgs){\n      return <p>Please enter name of organisation</p>\n    }\n    if(searchedOrgs && searchedOrgs[0] \n      && searchedOrgs[0].message){\n      return (\n        <p>Sorry, it's error: \n          <br></br>\n          {searchedOrgs[0].message}\n        </p>\n    )}\n    if(searchedOrgs.length === 0) {\n      return <p>{this.notFound}</p> \n    }\n    return searchedOrgs.map((org, i ) => {\n      return (\n        <div className=\"organisation\"\n             key={org.id + i} >\n          <h2 className=\"organisation__name\"\n              onClick={this.handleSelect}>\n            {org.login}\n          </h2>\n          {(this.state.selectedOrg &&\n           this.state.selectedOrg === org.login)?(\n            <div className=\"org__info\">\n              <p className=\"org_description\">\n              {org.description}\n              </p>\n              <div className=\"members\">\n                <h3>Members :\n                </h3>\n                {this.renderMembers()}\n              </div>\n            </div>)\n          :(\"\")}\n        </div>\n      )\n    });\n  }\n\n\trender() {\n    return(\n  \t\t<div className=\"organisations\">\n        {this.renderSearchedOrgs()}\n  \t\t</div>\n\t  )\n  }\n}\n\nexport default OrganisationList;\n","const utils = {\r\n  debounce\r\n};\r\n\r\nexport default utils;\r\n\r\nfunction debounce(f, delay) {\r\n  let timer = null;\r\n  return function(...args) {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      f.call(this, ...args);\r\n    }, delay);\r\n  };\r\n}","import React from 'react';\r\nimport Search from './main/Search'\r\nimport OrganisationList from './main/OrganisationList'\r\nimport OrgsService from './service'\r\nimport utils from './utils'\r\n\r\nclass Main extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state={ searchedOrgs: false }\r\n\t}\r\n\r\n  debounceEvent(...args) {\r\n    this.debouncedEvent = utils.debounce(...args);\r\n    return event => {\r\n      event.persist();\r\n      return this.debouncedEvent(event);\r\n    }\r\n  }\r\n\r\n  handleSearch = (event) => {\r\n    const value =  event.target.value.toLowerCase();\r\n    OrgsService.searchOrg(value)\r\n      .then(data => {\r\n        this.setState({ searchedOrgs: data })\r\n      })\r\n      .catch((error) => [\"it's error\"]);\r\n  };\r\n\r\n  render(){ \r\n  console.log(new Date(1561468780*1000)) \r\n\t  return(\r\n\t\t  <main className=\"main\">\r\n        <Search handleSearch={this.debounceEvent(this.handleSearch, 500)}/>\r\n        <OrganisationList searchedOrgs={this.state.searchedOrgs}/>\r\n\t\t  </main>\r\n\t)}\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header.js'\r\nimport Main from './components/Main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}